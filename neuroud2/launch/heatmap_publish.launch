<launch>

    <master auto="start"/>
    <!-- MAP SERVER -->
    <arg name="map_file" default="$(find ubiquitous_display_navigation)/map/corridor_map.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
      <param name="frame_id" value="/map" />
    </node>

    <!-- launch merger lrf -->
    <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
      <param name="destination_frame" value="base_scan"/>
      <param name="cloud_destination_topic" value="/merged_cloud"/>
      <param name="scan_destination_topic" value="/scan"/>
      <param name="laserscan_topics" value ="/front_laser_scan /rear_laser_scan" /> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->

      <param name="angle_min" value="-3.14"/>
      <param name="angle_max" value="3.14"/>
      <param name="angle_increment" value="0.0058"/>
      <param name="scan_time" value="0.0333333"/>
      <param name="range_min" value="0.30"/>
      <param name="range_max" value="50.0"/>
    </node>

    <!-- launch leg_detctor -->
    <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=scan $(find leg_detector)/config/trained_leg_detector.yaml" output="screen"/>

    <node name="heatmap_publish" pkg="behavioral_model" type="heatmap_publisher.py" output="screen" />
    <node name="filter_leg" pkg="behavioral_model" type="filter_leg.py" output="screen" />

</launch>
